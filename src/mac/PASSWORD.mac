ROUTINE PASSWORD
PASSWORD ; password check routine
#include %occInclude
#include %occMessages
CHECK( user, passw ) PUBLIC {
	
	set match = $length(passw)>6 && ( passw?.E1.N.E ) && ( passw?.E1.(1.A,1.P).E )
	set errmsg = "Password does not match standard PCI_DSS_v3.2"
	
	Quit:'match $$$ERROR( $$$GeneralError, errmsg )

   	set hash = $System.Encryption.SHA1Hash( passw )
   	
   	/// we need storage
	#def1arg gl(%args) ^PASSWORDLOG(%args)
	
	set used = $d( $$$gl(user,"hash",hash) )
	set errmsg = "This password has already been used"
	Quit:used $$$ERROR($$$GeneralError,errmsg)

  	#; write passw log
  	set dt=$h //datetime
  	set $$$gl(user,"dt",dt)=hash // last password
	set $$$gl(user,"hash",hash)=dt // index for used

	#; clear passwords log - 
	/// require by standard PCI-DSS 
	#define PasswNotRepeatTimes 4 
	set i=0, dt=""
  	for { set i=i+1, dt=$o($$$gl(user,"dt",dt), 1, hash) Quit:dt=""

	  	if i'>$$$PasswNotRepeatTimes continue
		#; remove oldest hashes
	  	kill $$$gl(user,"dt",dt) // clear hash
		kill:hash'="" $$$gl(user,"hash",hash) //clear hash index
		// hash'="" How it possible?
	}
	
  	Quit $$$OK
}
